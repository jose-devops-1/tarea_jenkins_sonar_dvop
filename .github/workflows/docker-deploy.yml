name: Docker Deploy (Windows)

on:
  push:
    branches:
      - joseortega   # Cambia esto si tu rama principal es otra .

jobs:
  build-and-run:
    runs-on: self-hosted   # Usas tu runner local en Windows .
    defaults:
      run:
        shell: powershell

    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        
      - name: Limpiar contenedor previo si existe
        run: |
          docker stop laboratorio-final-devops *>$null; if ($LASTEXITCODE -eq 0) { Write-Output "Contenedor detenido" } else { Write-Output "No estaba corriendo" }
          docker rm laboratorio-final-devops *>$null; if ($LASTEXITCODE -eq 0) { Write-Output "Contenedor eliminado" } else { Write-Output "No existía" }

      - name: Build JAR con Maven
        run: |
          mvn clean package

      - name: Construir imagen Docker
        run: |
          docker build -t laboratorio-final-devops:1.0 .

      - name: Ejecutar contenedor
        run: |
          docker run -d -p 8081:8081 --name laboratorio-final-devops laboratorio-final-devops:1.0

      - name: Verificar contenedores activos
        run: |
          docker ps -a

      - name: Esperar a que la app esté lista
        run: |
          Write-Output "Esperando que la aplicación se inicie..."
          Start-Sleep -Seconds 15

      - name: Probar aplicación con Invoke-WebRequest (PowerShell)
        run: |
          Write-Output "Ejecutando prueba automática..."
          $response = Invoke-WebRequest -Uri http://localhost:8081/ -UseBasicParsing
          if ($response.StatusCode -ne 200) {
            Write-Output "Prueba fallida. Código: $($response.StatusCode)"
            exit 1
          } else {
            Write-Output "Prueba exitosa. Código: $($response.StatusCode)"
          }